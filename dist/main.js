/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function() {

eval("async function getById(id) {\n  let res;\n  try {\n    const response = await fetch('../db/People.json');\n    if (response.ok) {\n      const arr = await response.json();\n      arr.forEach(el => {\n        if (el.playerID === id) {\n          res = el;\n        }\n      });\n      return res;\n    } else {\n      throw response;\n    }\n  } catch (error) {\n    console.error(error);\n  }\n}\nasync function getNameById(id) {\n  let res;\n  try {\n    const response = await fetch('../db/People.json');\n    if (response.ok) {\n      const arr = await response.json();\n      arr.forEach(el => {\n        if (el.playerID === id) {\n          res = el.nameFirst + ' ' + el.nameLast;\n        }\n      });\n      return res;\n    } else {\n      throw response;\n    }\n  } catch (error) {\n    console.error(error);\n  }\n}\nasync function getHittingStats(id) {\n  try {\n    const response = await fetch('../db/Batting.json');\n    if (response.ok) {\n      const arr = await response.json();\n      return arr.filter(el => el.playerID === id);\n    } else {\n      throw response;\n    }\n  } catch (error) {\n    console.error(error);\n  }\n}\nasync function appendBatting(id, num) {\n  arr = await getTotalBatting(id);\n  document.querySelector(`.stats-${num}-avg`).textContent = calcAVG(arr[1], arr[0]).toFixed(3);\n  document.querySelector(`.stats-${num}-slg`).textContent = calcSLG(arr[1], arr[2], arr[3], arr[4], arr[0]).toFixed(3);\n  document.querySelector(`.stats-${num}-obp`).textContent = calcOBP(arr[1], arr[6], arr[8], arr[5], arr[0]).toFixed(3);\n  document.querySelector(`.stats-${num}-opb`).textContent = calcOPS(arr[1], arr[2], arr[3], arr[4], arr[0], arr[1], arr[6], arr[8], arr[5]).toFixed(3);\n  document.querySelector(`.stats-${num}-hr`).textContent = arr[4];\n  document.querySelector(`.stats-${num}-rbi`).textContent = arr[7];\n  document.querySelector(`.stats-${num}-ab`).textContent = arr[0];\n}\nasync function getTotalBatting(id) {\n  let totals = [];\n  const obj = await getHittingStats(id);\n  let ab = 0;\n  let hits = 0;\n  let doub = 0;\n  let trip = 0;\n  let hr = 0;\n  let sf = 0;\n  let bb = 0;\n  let rbi = 0;\n  let hbp = 0;\n  obj.forEach(i => {\n    ab += i.AB;\n    hits += i.H;\n    doub += i['2B'];\n    trip += i['3B'];\n    hr += i.HR;\n    sf += i.SF;\n    bb += i.BB;\n    rbi += i.RBI;\n    hbp += i.HBP;\n  });\n  totals.push(ab, hits, doub, trip, hr, sf, bb, rbi, hbp);\n  return totals;\n}\nasync function appendDetails(id, num) {}\nappendBatting('troutmi01', 1);\nappendBatting('ruthba01', 2);\nfunction calcAVG(hits, atBats) {\n  return hits / atBats;\n}\nfunction calcSLG(sing, doub, trip, hr, atBats) {\n  return (sing + doub * 2 + trip * 3 + hr * 4) / atBats;\n}\nfunction calcOBP(hits, walks, hbp, sacFly, atBats) {\n  return (hits + walks + hbp) / (atBats + walks + hbp + sacFly);\n}\nfunction calcOPS(sing, doub, trip, hr, atBats, hits, walks, hbp, sacFly) {\n  return calcSLG(sing, doub, trip, hr, atBats) + calcOBP(hits, walks, hbp, sacFly, atBats);\n}\n\n// getById('troutmi01').then(res => console.log(res));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jb21wYXJhdG9yLWFwcC8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./src/index.js"](0, {}, __webpack_require__);
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.scss"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;